@import 'nib'

body
	margin: 0
	color: black;
	background-color: black;
	box-sizing: content-box;
	background-image: url('../bg.elbert.jpeg');
	background-position: center;
	background-size: cover;
	overflow: auto;
	font-family: sans;
	letter-spacing 0.05rem
	line-height 0.9


section.container
	display: flex;
	align-items: center;
	justify-content: center;
	height: 100vh;
	width: 100vw;
	box-sizing: content-box;


section.box.top
	align-self: flex-start;


section.box.bottom
	align-self: flex-end;


section.box
	box-sizing: content-box;
	flex: 0 0 auto;
	background-color: rgba(255,255,255,0.8);
	border-radius: 1ex;
	padding: 1em;
	max-width: 30em;


h1
	font-size: 3em;
	font-weight: 200;
	margin: 1ex 0;
	text-align: center

section img
	border-radius: 100%;
	box-shadow: 0px 1px 2px rgba(0,0,0,0.4);
	border: 4px solid white;

//////////////////////////////////////////////////////////////////////////////
// Unblur animation
//////////////////////////////////////////////////////////////////////////////

unblur_animation_elements = h1, img

//{unblur_animation_elements}
	//animation: unblur 1s ease-in-out 0s normal;

{unblur_animation_elements}
	animation: unblur 1s ease-in-out 0s both;

@keyframes unblur
	0%,50%
		opacity:0;
		-moz-filter:blur(30px);
		-ms-filter:blur(30px);
		-o-filter:blur(30px);
		-webkit-filter:blur(30px);
		filter:blur(30px)

	100%
		opacity:1;
		-moz-filter:blur(0);
		-ms-filter:blur(0);
		-o-filter:blur(0);
		-webkit-filter:blur(0);
		filter:blur(0)

@-webkit-keyframes unblur
	0%,50%
		opacity:0;
		-webkit-filter:blur(30px);

	100%
		opacity:1;
		-webkit-filter:blur(0);

//////////////////////////////////////////////////////////////////////////////
// Fade-in animation
//////////////////////////////////////////////////////////////////////////////

// What's the parent element of those elements we'll be fading in?
fadeIn_parent_element = section
// How long should we wait before starting
fadeIn_delay = 0.8s
// Which nth child should we start the fadeIn animation? Count from 1
fadeIn_start_element = 2

for idx in range(fadeIn_start_element, 10)
	{fadeIn_parent_element} > *:nth-child({idx})
		//animation: fadeInFromAbove 0.6s ease-in-out 0.5s 1 running;
		animation: fadeInFromAbove 0.5s ease-in-out 0.8s 1 both;
		animation-delay: fadeIn_delay + (idx - fadeIn_start_element) * 0.2

@keyframes fadeInFromAbove
	0%
		opacity: 0; transform: translateY(-20px);
	100%
		opacity: 1; transform: translateY(0);

@-webkit-keyframes fadeInFromAbove
	0%
		opacity: 0; transform: translateY(-20px);
	100%
		opacity: 1; transform: translateY(0);

//////////////////////////////////////////////////////////////////////////////
// Rotating/switching text animation
//////////////////////////////////////////////////////////////////////////////

// based on http://tympanus.net/codrops/2012/04/17/rotating-words-with-css-animations

// number of span elements surrounding each word in rw-words
number_of_words = 6
display_time = 3s

// NOTE: .rw-sentence should be a div, not a p!
.rw-sentence
	position: relative

.rw-words
	display: inline

// default look for a word
.rw-words-1 span
	position: absolute
	opacity: 0
	overflow: hidden
	//width: 100%

.rw-words-1 span
	animation: rotateWords (number_of_words * display_time) linear infinite 0s

for i in range(2, number_of_words)
	.rw-words span:nth-child({i})
		animation-delay (( i - 1 ) * display_time)

@keyframes rotateWords
	0%
		opacity: 0
	2%
		opacity: 0
		transform: translateY(-1em)
	5%
		opacity: 1
		transform: translateY(0px)
	17%
		opacity: 1
		transform: translateY(0px)
	20%
		opacity: 0
		transform: translateY(1em)
	80%
		opacity: 0
	100%
		opacity: 0

@-webkit-keyframes rotateWords
	0%
		opacity: 0
	2%
		opacity: 0
		transform: translateY(-1em)
	5%
		opacity: 1
		transform: translateY(0px)
	17%
		opacity: 1
		transform: translateY(0px)
	20%
		opacity: 0
		transform: translateY(1em)
	80%
		opacity: 0
	100%
		opacity: 0
